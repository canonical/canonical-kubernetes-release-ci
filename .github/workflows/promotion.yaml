name: Promote tracks

on:
  workflow_dispatch:
    inputs:
      dry_run:
        type: boolean
        default: false
        description: |-
          If true, it will not promote the revisions, just test which would be promoted
      days_in_edge_risk:
        type: number
        default: 1
        description: |-
          The number of days in edge risk to consider for promotion
      days_in_beta_risk:
        type: number
        default: 3
        description: |-
          The number of days in beta risk to consider for promotion
      days_in_candidate_risk:
        type: number
        default: 5
        description: |-
          The number of days in candidate risk to consider for promotion
      ignore_tracks:
        type: string
        required: false
        description: |-
          A space separated list of tracks to ignore when proposing promotions
      ignore_architectures:
        type: string
        required: false
        description: |-
          A space separated list of architectures to ignore when proposing promotions

  schedule:
    - cron: '0 0 * * *'  # Runs every midnight

permissions:
  contents: read

jobs:
  promotion-proposal:
    runs-on: ubuntu-latest
    outputs:
      proposals: ${{ steps.propose-promotions.outputs.proposals }}
    env:
      LPCREDS_B64: ${{ secrets.LP_CREDS }}
      LPCREDS: ./lp_creds
      ARGS: ''
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - run: uv tool install tox --with tox-uv
      - run: 'echo $LPCREDS_B64 | base64 --decode > lp_creds'
      - name: Assemble Dispatch Arguments
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          ARGS="$ARGS --days-in-edge-risk ${{ inputs.days_in_edge_risk }}"
          ARGS="$ARGS --days-in-beta-risk ${{ inputs.days_in_beta_risk }}"
          ARGS="$ARGS --days-in-candidate-risk ${{ inputs.days_in_candidate_risk }}"
          ARGS="$ARGS --ignore-tracks ${{ inputs.ignore_tracks }}"
          ARGS="$ARGS --ignore-arches ${{ inputs.ignore_architectures }}"
          echo "ARGS=$ARGS" >> $GITHUB_ENV
      - name: Assemble auto-promotion Arguments
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
            # Ignore the 1.30/31 and flavor tracks for auto-promotion. We don't support them.
            ARGS="$ARGS --ignore-tracks '^1\\.\d{2}$' '^1\\.30(-.*)?$' '^1\\.31(-.*)?$' "
            echo "ARGS=$ARGS" >> $GITHUB_ENV
      - name: Propose Promotions
        id: propose-promotions
        run: |
          tox -e runner -- scripts/promote_tracks.py propose --gh-action ${{ env.ARGS }}
  test-proposal:
    if: ${{ needs.promotion-proposal.outputs.proposals && needs.promotion-proposal.outputs.proposals != '[]' }}
    needs: promotion-proposal
    name: ${{ matrix.arch }} r${{ matrix.revision }} for ${{matrix.snap-channel}}
    strategy:
      fail-fast: false   # Don't fail the entire matrix if one proposal fails
      matrix:
        include: ${{ fromJson(needs.promotion-proposal.outputs.proposals) }}
    uses: ./.github/workflows/upgrade-proposal-test.yaml
    with:
      branch: ${{ matrix.branch }}
      dry_run: ${{ (github.event_name == 'workflow_dispatch' && inputs.dry_run) || github.event_name == 'pull_request'}}
      lxd-images: ${{ toJson(matrix.lxd-images) }}
      proposal-name: ${{ matrix.name }}
      revision: ${{ matrix.revision }}
      runner-labels: ${{ toJson(matrix.runner-labels) }}
      snap-channel: ${{ matrix.snap-channel }}
      upgrade-channels: ${{ toJson(matrix.upgrade-channels) }}
    secrets:
      SNAPSTORE_AUTH_TOKEN: ${{ secrets.SNAPSTORE_AUTH_TOKEN }}
